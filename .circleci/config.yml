# PowerAPI CircleCI configuration file
version: 2.1
jobs:
  build:
    docker:
      # Language image for build and unit tests
      - image: circleci/python:3.7

      # Service image for integration tests
      - image: circleci/mongo:4.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.cfg" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e ".[mongodb]"

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.cfg" }}

      # Run unit and integration tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test
            
  publish-release:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - run:
          name: check git tag with package version
          command: |
            check_git_tag_with_package_version () {
                tag_version=${CIRCLE_TAG#*v}
                pkg_version=$(python3 -c "import powerapi; print(powerapi.__version__)" 2>/dev/null || echo "error")
            	if [ "$tag_version" = "$pkg_version" ]; then
                		return 0
            	fi
            	return 1
            }
            check_git_tag_with_package_version

      - run:
          name: prepare environment
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade twine

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = powerapi" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: generate package
          command: |
            python3 setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  build-n-publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - publish-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/