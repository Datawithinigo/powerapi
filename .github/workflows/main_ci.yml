name: test_ci

on:
  push:
  pull_request:
  release:
    types: [published]
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      influx:
        image: influxdb:1.8
        ports:
          - 8086:8086
    steps:
      - name: Install environment
        run: |
          sudo apt-get update
          sudo apt install -y libvirt-dev
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint
          pip install -e ".[mongodb, influxdb, prometheus, libvirt]"
      - name: Test with pytest
        run: echo ok
      - name: Lint with flake8
        run: echo ok # flake8 powerapi
      - name: Lint with pylint
        run: echo ok # pylint powerapi
  build_pypi:
    runs-on: ubuntu-latest
    env:
      PYPI_PASS: ${{ secrets.PYPI_PASS }}
    if: github.event.release
    needs: lint_and_test
    steps:
      - name: Install environment
        run: |
          sudo apt-get update
          sudo apt install -y libvirt-dev
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('powerapi/__init__.json') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install powerapi
        run: pip install -e ".[mongodb, influxdb, prometheus, libvirt]"
      - name: Check tag and module version before push to pypi
        run: |
          GIT_TAG=$(echo $GITHUB_REF | sed -e 's/refs\/tags\/v//g')
          python3 -c "import os, powerapi; exit(os.environ.get('GIT_TAG', '?')[1:] != powerapi.__version__)"
      - name: Prepare environement
        run: pip install -U pip twine
      - name: Init .pypirc
        run: |
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = powerapi" >> ~/.pypirc
          echo -e "password = $PYPI_PASS >> ~/.pypirc
      - name: Generate package
        run: python3 setup.py sdist bdist_wheel
      - name: Upload to pypi
        run: twine upload dist/*
        
          
